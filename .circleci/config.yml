version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: ''
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          CIRCLE_ARTIFACTS: /tmp/artifacts
      - image: circleci/mysql:5.7.23
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: examin_test
    working_directory: ~/examin

commands:
  restore_dependencies:
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

jobs:
  setup:
    executor:
      name: default
    steps:
      - checkout

      # Install Bundler
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      - restore_dependencies

      # Bundle install dependencies
      - run:
          name: Bundle Install
          command: bundle check || bundle install --path vendor/bundle

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 120s

      - run:
          name: Database setup
          command: bundle exec ridgepole -c config/database.yml -E test --apply -f db/schemas/Schemafile

  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_dependencies

      # Run rubocop
      - run:
          name: Run rubocop
          command: bundle exec rubocop

      # Run rspec in parallel
      - run:
          name: Run rspec in parallel
          command: bundle exec rspec

      - store_artifacts:
          path: /tmp/artifacts/coverage

workflows:
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
